# Generate TODO list to set up environment if something missing
# --
	List("ansible","sshpass")->prog
		found=false
		Inner{
			Dir.runCapture("which",prog)->line
				if (line.contains(Sys.fileSeparator+prog)) found=true
		}
		if (!found) out("apt-get install " + prog)
	| _=>todo

	if (!todo.empty) todo=List("apt-get update") + todo
	todo
//onLoad


# Set ansible root directory (which contains hosts file and playbooks dir)
# --
	P(1,Dir) => dir
	Db2:Set(Sys.scriptId,"rootDir",dir)
/SetRootDir


# Get ansible root directory
# --
	Db2:Get(Sys.scriptId,"rootDir",Dir)
/GetRootDir



# Hosts file
# --
	Dir.file("hosts.txt")
/HostsFile

# Playbook directory
# --
	Dir.sub("playbooks")
/PlaybookDir


# Run any playbook
# --	
	P(1) as String? => playbook
	P(2) as String? => sshUser
	P(3,true) => askPass
	P(4,false) => askSudoPass

	GetRootDir => rootDir
	println("Running ansible from " + rootDir.path)
	
	currDir=Dir
	rootDir.cd


	if (playbook==null) Inner{
		PlaybookDir.files->f println("   " + f.name) |
		Input("Enter name of playbook").get => name
		if (!name.endsWith(".yml")) name=name + ".yml"
		playbook=PlaybookDir.file(name)

	}
	if (sshUser==null) {
		sshUser=Input("Enter ssh user").get
	}
	
	cmd=List(
		"ansible-playbook", 
		playbook.path,
		"--user", sshUser, 
		"-i", HostsFile.path
	) 
	if(askPass) cmd=cmd + "--ask-pass"
	if (askSudoPass) cmd=cmd + "--ask-become-pass"

	cmd.print

	Dir.run(cmd) => result
	currDir.cd
	result
/RunPlaybook



# Date object for today
# --
	Date.setFormat("yyyy-MM-dd")
//FDate

# Get expiration date
# --
	P(1,Date) => defaultValue
	defaultValue.setFormat(FDate.getFormat)
	loop
		Input("Expiration date on format YYYY-MM-DD or YYYY-MM").setCurrCond(defaultValue.fmt).get => str
		if (str.length==7) {
			str=str+"-01"
		}
		
		if (FDate.parse(str,null) != null) {
			out(FDate.parse(str))
			break
		}
		println("Invalid date, must be on format " + FDate.getFormat)
	|
	_.first
//GetExpirationDate
		

# Create or modify info about article
# --
	P(1) => data

	delete=false
	if (data != null) {
		println
		println("Expiration date : " + data.expirationDate.fmt)
		println("Description     : " + data.description)
		println
		readLine("Enter 'd' to delete, or ENTER to edit") => cmd
		if (cmd=='d') delete=true
	}

	if (delete) {
		# return null
		null
	} else {
		# Edit existing or create new, return object
		if (data==null) data=Dict

		Input("Description") => inp
		if (data.has("description")) {
			inp.setCurr(data.get("description"))
		}
			
		inp.get => description

		d=data.get("expirationDate",FDate)
		GetExpirationDate(d) => expirationDate

		data.copyFrom(SymDict(description,expirationDate))
		data
	}
//EditOrCreate


# Database id
# --
	"Freezer"
//DbId


# Format int
# --
	P(1,0) => i
	s=("    "+i).last(4)
//fmt

# Get data as sorted list, with shortest expiration last
# --
	Db2:Get(DbId,"data",List) => data
	data -> row
		out(Int(row.expirationDate.get, row))
	| _.sort.reverse->x
		out(x.data)
//SortedList

# Main loop
# --
	loop
		list=SortedList
		{
			i=0
			list->row
				println(fmt(i) + " - " + row.expirationDate.fmt + " " + row.description)
				i=i+1
		}
		prompt="Enter " + if(!list.empty,"number to edit or delete, ","") + "'a' to add, 'x' ENTER to quit" 
		readLine(prompt) => cmd
		break(cmd=="")
		if (cmd=='a') {
			list.add(EditOrCreate(null))
		} else {
			pos=cmd.parseInt
			x = EditOrCreate(list.nth(pos))
			if (x==null) {
				# entry deleted
				list.remove(pos)
			}
		}
		# Save list
		Db2:Set(DbId,"data", list)
/Main

	
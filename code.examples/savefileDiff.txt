# License
<<< EOF
#
# CFT - an interactive programmable shell for automation 
# Copyright (C) 2020-2025 Roar Foshaug
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>
#
>>> EOF
/License

# Simple Diff function for comparing text files




# Identify file A
# --
    P(1,Sys.lastResult)=>f
	if (Sys.getType(f) != "File") f=File(f)
    Db2:Set("Diff","FileA",f)
/f1

# Identify file B
# --
    P(1,Sys.lastResult)=>f
	if (Sys.getType(f) != "File") f=File(f)
    Db2:Set("Diff","FileB",f)
/f2

# Search for next match
# --
    P(1).trim => str
    P(2) => pos
    P(3) => list
    
    loop
        break(pos >= list.length)
        #println("Search: " + list.nth(pos))
        #println("        " + str)
        break(list.nth(pos).trim==str)
        pos=pos+1
    |
    pos
//Search    


# Status
# --
    println("f1 = " + Db2:Get("Diff","FileA").path)
    println("f2 = " + Db2:Get("Diff","FileB").path)
    ""
/status


# Swap files
# --
    a=Db2:Get("Diff","FileA")
    b=Db2:Get("Diff","FileB")
    Db2:Set("Diff","FileA",b)
    Db2:Set("Diff","FileB",a)
/swap


# Short cut
# --
    status
/s



# Fix integer
# --
    P(1,1)=>i
    s=""+i
    if (s.length<4) {
        s=("    "+s)
        s=s.sub(s.length-4)
    }
    s
//fix



# Get color A
# --
    Db2:Get("Diff","ColorB",Curses:TxtYellow)
//ColA

# Get color B
# --
    Db2:Get("Diff","ColorA",Curses:TxtGreen)
//ColB

# Matches
# --
	Db2:Get("Diff","ColorMatch",Curses:TxtWhite)
//ColMatch


# Reset color
# --
    Curses:Reset
//ColReset

    
# Diff two files
# --
    P(1) => fileA
    P(2) => fileB

	a=fileA.read
	b=fileB.read
	
	if (Sys.getType(fileA)=="String") fileA=File(fileA)
	if (Sys.getType(fileB)=="String") fileB=File(fileB)

    ca=cb=0 # line counters
    loop
        if (ca >= a.length) {
            break
        } 
        if (cb >= b.length) {
            break
        }
        # string a and string b (lines from a and b)
        sa=a.nth(ca)
        sb=b.nth(cb)
        
        if (sa.trim==sb.trim) {
			println(ColReset + fix(ca+1) + " =" + fix(cb+1) + " :   " + ColMatch + sa + ColReset)
            ca=ca+1
            cb=cb+1
        } else {
			# Search ahead for next match
            ma=Search(sb,ca,a)-ca
            mb=Search(sa,cb,b)-cb
            
            if (mb<ma) {
                println(ColReset + fix("") + "  " + fix(cb+1) + " >>  " + ColB + sb + ColReset)
                cb=cb+1
            } else {
                println(ColReset + fix(ca+1) + "  " + fix("") + " <   " + ColA + sa + ColReset)
                ca=ca+1
            }
        }
    |
    loop
        break (ca >= a.length)
        println(ColReset + fix(ca+1) + "  " + fix("") + " <  " + ColA + a.nth(ca) + ColReset)
        ca=ca+1
    |
    loop
        break (cb >= b.length)
        println(ColReset + fix("") + "  " + fix(cb+1) + " >> " + ColB + b.nth(cb) + ColReset)
        cb=cb+1
    |
        
	println
	println("   ^   ^")
	println("   |   |")
	println("   +----- " + fileA.path)
	println("       |")
	println("       +- " + fileB.path)
	println

/diff
       

# License
<<< EOF
#
# CFT - an interactive programmable shell for automation 
# Copyright (C) 2020-2025 Roar Foshaug
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>
#
>>> EOF
/License

Sys.homeDir.sub("src").allFiles(Glob("*.java"))
/JavaFiles

JavaFiles->f
    out(f.read.length)
| _.sum
/JavaLines


P(1)=>str
grep=Grep(str)
JavaFiles->f 
    out(grep.fileCount(f))
| _.sum
/JFind


JFind("extends Function")     
/JavaFunctions

JFind("extends ShellCommand")
/ShellCommands

JFind("extends Obj")
/JavaObjectTypes


JFind("extends Value")
/JavaValueTypes




List("code.lib","code.examples")->d
Sys.homeDir.sub(d).allFiles(Glob("savefile*.txt"))->f out(f)
/ScriptFiles


ScriptFiles->f
    out(f.read.length)
| _.sum
/ScriptLines


# Main
# --
	Sequence(
		@ Script code:      <<ScriptLines>> lines
		@ Java code:        <<JavaLines>> lines
		@ Functions:        <<JavaFunctions>>
		@ Shell commands:   <<ShellCommands+3+2>>
		@ Object types:     <<JavaObjectTypes>>
		@ Value types:      <<JavaValueTypes>>
	).mergeExpr
/main

# List object types
# --
	JavaFiles->f 
		Grep("extends Obj").file(f)->line 
			reject(line.contains("abstract"))
			out(line.after("class").before("extends").trim)
/ObjectTypes

# List value types
# --
	JavaFiles->f 
		Grep("extends Value").file(f)->line 
			reject(line.contains("abstract"))
			out(line.after("class").before("extends").trim)
/ValueTypes

# All object and value types
# --
	(ObjectTypes + ValueTypes) -> t
		println(t)
/AllObjects



# License
<<< EOF
#
# CFT - an interactive programmable shell for automation 
# Copyright (C) 2020-2025 Roar Foshaug
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>
#
>>> EOF
/License

# Return files, sorted by name
# --
    P(1,Dir)=>dir
    P(2,Lambda{P(1)=>file true})=>LFilterFiles
    dir.files()->f 
        assert(LFilterFiles.call(f))
        out(Str(f.name.toLower,f))
    | _.sort->x
        out (x.data)
//NFiles

# Return immediate subdirs, sorted by name
# --
    P(1,Dir)=>dir
    dir.dirs->d
        out(Str(d.name.toLower,d))
    | _.sort->x
        out(x.data)
//SubDirs

# Lambda for filtering files based on age
# Example:
#   ShowTree(NewestFiles(2))
# --
    P(1,1)=>hours
    SymDict(hours).set("x",Lambda{
        P(1)=>file
        Sys.currentTimeMillis-file.lastModified < self.hours*3600*1000
    }).x
/NewestFiles


# Lambda for filtering files by glob string
# Example:
#   ShowTree(Filename("*.txt"))
# --
    P(1,"*") => glob
    SymDict(glob).set("x",Lambda{
        P(1)=>file
        Glob(self.glob).match(file)
    }).x
/Filename
    
    
# Show tree with files
# --
    P(1,Lambda{P(1)=>file true})=>LFilterFiles
    P(2,Dir)=>dir
    P(3,"")=>indent
    
    Inner{
        NFiles(dir,LFilterFiles)->f
            println(""+indent + f.name)
    }
    Inner {
        SubDirs(dir)->d
            println(""+indent+d.name+"/")
            ShowTree(LFilterFiles, d, indent+"|  ")
    }
/ShowTree
